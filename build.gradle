plugins {
	id 'org.springframework.boot' version '2.3.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'com.github.sherter.google-java-format' version '0.8'
  id 'com.github.node-gradle.node' version '2.2.4'
	id 'java'
  id 'base'
}

group = 'com.careless'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_11
	targetCompatibility = JavaVersion.VERSION_11
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'javax.xml.bind:jaxb-api:2.3.0'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

node {
  download = true
  version = '12.13.0'
  workDir = file('${project.buildDir}/nodejs')
  npmWorkDir = file('${project.buildDir}/npm')
  nodeModulesDir = file('${project.projectDir}/src/main/webapp')
}

task npmBuildProd(type: NpmTask, dependsOn: 'npmInstall') {
  args = ['run', 'build']
}

task copyWebApp(type: Copy) {
  from "${project.projectDir}/src/main/webapp/build"
  into "${project.buildDir}/resources/main/static/."
}

test {
	useJUnitPlatform()
}

clean {
  delete "${project.projectDir}/src/main/webapp/node_modules"
  delete "${project.projectDir}/src/main/webapp/coverage"
  delete "${project.projectDir}/src/main/webapp/build"
}
